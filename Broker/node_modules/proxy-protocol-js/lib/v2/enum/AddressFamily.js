"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressFamily = exports.AddressFamilyType = void 0;
var IPv4ProxyAddress_1 = require("../proxy_address/IPv4ProxyAddress");
var IPv6ProxyAddress_1 = require("../proxy_address/IPv6ProxyAddress");
var UnixProxyAddress_1 = require("../proxy_address/UnixProxyAddress");
var UnspecProxyAddress_1 = require("../proxy_address/UnspecProxyAddress");
var AddressFamilyType;
(function (AddressFamilyType) {
    AddressFamilyType[AddressFamilyType["UNSPEC"] = 0] = "UNSPEC";
    AddressFamilyType[AddressFamilyType["INET"] = 16] = "INET";
    AddressFamilyType[AddressFamilyType["INET6"] = 32] = "INET6";
    AddressFamilyType[AddressFamilyType["UNIX"] = 48] = "UNIX";
})(AddressFamilyType = exports.AddressFamilyType || (exports.AddressFamilyType = {}));
var AddressFamily = (function () {
    function AddressFamily(addressFamilyType) {
        this.addressFamilyType = addressFamilyType;
    }
    AddressFamily.prototype.getLength = function () {
        switch (this.addressFamilyType) {
            case AddressFamilyType.INET:
                return 12;
            case AddressFamilyType.INET6:
                return 36;
            case AddressFamilyType.UNIX:
                return 216;
            default:
                return 0;
        }
    };
    AddressFamily.prototype.getFactoryMethod = function () {
        switch (this.addressFamilyType) {
            case AddressFamilyType.INET:
                return IPv4ProxyAddress_1.IPv4ProxyAddress.from;
            case AddressFamilyType.INET6:
                return IPv6ProxyAddress_1.IPv6ProxyAddress.from;
            case AddressFamilyType.UNIX:
                return UnixProxyAddress_1.UnixProxyAddress.from;
            default:
                return UnspecProxyAddress_1.UnspecProxyAddress.from;
        }
    };
    return AddressFamily;
}());
exports.AddressFamily = AddressFamily;
//# sourceMappingURL=AddressFamily.js.map