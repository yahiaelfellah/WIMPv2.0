import { INETProtocol } from './enum/INETProtocol';
import { Peer } from './Peer';
export declare class V1BinaryProxyProtocol {
    readonly inetProtocol: INETProtocol;
    readonly source: Peer;
    readonly destination: Peer;
    readonly data?: Uint8Array | undefined;
    constructor(inetProtocol: INETProtocol, source: Peer, destination: Peer, data?: Uint8Array | undefined);
    build(): Uint8Array;
    static parse(input: Uint8Array): V1BinaryProxyProtocol;
    static isValidProtocolSignature(input: Uint8Array): boolean;
}
export declare class V1BinaryProxyProtocolParseError implements Error {
    readonly message: string;
    readonly name: string;
    constructor(message: string);
}
